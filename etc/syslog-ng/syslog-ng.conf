@version: 3.13
@include "scl.conf"

options {
	threaded(yes);
        	chain_hostnames(no);
        	stats_freq(43200);
       	mark_freq(3600);
};

source src { system(); internal(); };

# define destinations
destination authlog { file("/var/log/auth.log"); };
destination syslog { file("/var/log/syslog"); };
destination cron { file("/var/log/cron.log"); };
destination daemon { file("/var/log/daemon.log"); };
destination lpr { file("/var/log/lpr.log"); };
destination user { file("/var/log/user.log"); };
destination mail { file("/var/log/mail.log"); };
destination mstats { file("/var/log/mstats.log"); };
destination mstatsprog { program("/opt/postfixStat.pl" template("$UNIXTIME $PROGRAM $MESSAGE\n")); };

destination mailinfo { file("/var/log/mail.info"); };
destination mailwarn { file("/var/log/mail.warn"); };
destination mailerr { file("/var/log/mail.err"); };

destination newscrit { file("/var/log/news/news.crit"); };
destination newserr { file("/var/log/news/news.err"); };
destination newsnotice { file("/var/log/news/news.notice"); };

destination debug { file("/var/log/debug"); };
destination messages { file("/var/log/messages"); };

destination console_all { file("/dev/tty12"); };

# create filters
filter f_authpriv { facility(auth, authpriv); };
filter f_syslog { not facility(authpriv, mail); };
filter f_cron { facility(cron); };
filter f_daemon { facility(daemon); };
filter f_lpr { facility(lpr); };
filter f_mail { facility(mail); };
filter f_user { facility(user); };
filter f_debug { not facility(auth, authpriv, news, mail); };
filter f_messages { level(info..warn)
        and not facility(auth, authpriv, mail, news); };
filter f_emergency { level(emerg); };

filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_crit { level(crit); };
filter f_err { level(err); };
filter f_failed { message("failed"); };
filter f_denied { message("denied"); };
filter f_mstats {
	(program("dovecot") and (match(": MD5" value("MESSAGE")) or match("imap-login: Login:" value("MESSAGE"))
		or match("auth-worker" value("MESSAGE")))) or 
	(program("postfix/cleanup") and (match("message-id=" value("MESSAGE")))) or
	(program("postfix") and (match("reject:" value("MESSAGE")) or match("status=" value("MESSAGE")) or match("client=" value("MESSAGE")))) or
	(program("postfix/qmgr") and (match("from=" value("MESSAGE"))));
};

# connect filter and destination
log { source(src); filter(f_authpriv); destination(authlog); };
log { source(src); filter(f_syslog); destination(syslog); };
log { source(src); filter(f_cron); destination(cron); };
log { source(src); filter(f_daemon); destination(daemon); };
log { source(src); filter(f_lpr); destination(lpr); };
log { source(src); filter(f_mail); destination(mail); };
log { source(src); filter(f_user); destination(user); };
log { source(src); filter(f_mail); filter(f_info); destination(mailinfo); };
log { source(src); filter(f_mail); filter(f_warn); destination(mailwarn); };
log { source(src); filter(f_mail); filter(f_err); destination(mailerr); };
log { source(src); filter(f_mstats); destination(mstats); };
log { source(src); filter(f_mstats); destination(mstatsprog); };

log { source(src); filter(f_debug); destination(debug); };
log { source(src); filter(f_messages); destination(messages); };

log { source(src); destination(messages); };
log { source(src); destination(console_all); };
